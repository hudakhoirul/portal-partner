import { IDatabaseObj } from "../base";
import { TableMap } from "@app/_shared/table-map";

export interface IClaimPartner extends IDatabaseObj {
    beneficiery: string;
    beneficieryFamilyCardNo: string;
    beneficieryKtpNo: string;
    beneficieryRelationInsuredCode: string;
    claimAmount: string;
    claimRegNo: string;
    claimStatusCode: string;
    claimStatusName: string;
    claimTypeCode: string;
    claimTypeName: string;
    claimantEmailAddress: string;
    claimantIsInsured: string;
    claimantName: string;
    claimantPhoneNo: string;
    claimantRelationInsuredCode: string;
    claimantRelationInsuredName: string;
    createdBy: string;
    createdDate: string;
    currency: string;
    emailAddress: string;
    eventDate: string;
    finishDate: string;
    idCurrencyPolicy: string;
    idMemberPartner: string;
    idTransactionParent: string;
    idUserPartner: string;
    idUserPartnerMod: string;
    illnessCode: string;
    illnessName: string;
    illnessText: string;
    isDelete: string;
    modifedDate: string;
    modifiedBy: string;
    participant: string;
    participantNo: string;
    partner: string;
    partnerAccountName: string;
    partnerAccountNo: string;
    partnerBank: string;
    partnerBankName: string;
    partnerBankText: string;
    partnerCurrency: string;
    partnerFamilyCardNo: string;
    partnerName: string;
    partnerRelationText: string;
    phoneNo1: string;
    phoneNo2: string;
    policyNo: string;
    product: string;
    relationInsuredCode: string;
    relationship: string;
    sourceAppId: string;
    startDate: string;
    sumAssured: string;
    transactionFormId: string;
    transactionId: string;
    virtualAccount: string;
}

export class ClaimPartner implements IClaimPartner {
    static tableName: string = TableMap.ClaimPartner;
    beneficiery: string;

    beneficieryFamilyCardNo: string;
    beneficieryKtpNo: string;
    beneficieryRelationInsuredCode: string;
    claimAmount: string;
    claimRegNo: string;
    claimStatusCode: string;
    claimStatusName: string;
    claimTypeCode: string;
    claimTypeName: string;
    claimantEmailAddress: string;
    claimantIsInsured: string;
    claimantName: string;
    claimantPhoneNo: string;
    claimantRelationInsuredCode: string;
    claimantRelationInsuredName: string;
    createdBy: string;
    createdDate: string;
    currency: string;
    emailAddress: string;
    eventDate: string;
    finishDate: string;
    idCurrencyPolicy: string;
    idMemberPartner: string;
    idTransactionParent: string;
    idUserPartner: string;
    idUserPartnerMod: string;
    illnessCode: string;
    illnessName: string;
    illnessText: string;
    isDelete: string;
    modifedDate: string;
    modifiedBy: string;
    participant: string;
    participantNo: string;
    partner: string;
    partnerAccountName: string;
    partnerAccountNo: string;
    partnerBank: string;
    partnerBankName: string;
    partnerBankText: string;
    partnerCurrency: string;
    partnerFamilyCardNo: string;
    partnerName: string;
    partnerRelationText: string;
    phoneNo1: string;
    phoneNo2: string;
    policyNo: string;
    product: string;
    relationInsuredCode: string;
    relationship: string;
    sourceAppId: string;
    startDate: string;
    sumAssured: string;
    transactionFormId: string;
    transactionId: string;
    virtualAccount: string;

    constructor(props: IClaimPartner) {
        Object.keys(props).forEach(prop => {
            const value = props[prop];
            this[prop] = value;
        });
    }
}
